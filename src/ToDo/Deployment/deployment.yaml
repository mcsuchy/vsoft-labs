apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app-deploy
spec:
  selector: 
    matchLabels:
      name: todo-app
  template:
    metadata:
      labels:
        name: todo-app
        azure.workload.identity/use: "true"
    spec:
      serviceAccountName: todo-app
      containers:
      - name: todo-counter
        image: tododockerregistry.azurecr.io/todo-app/todo-image:${TAG}
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"
        - name: ConnectionStrings__DefaultConnection
          value: "Server=tcp:lab-sql-02.database.windows.net,1433;Initial Catalog=lab-02-sql;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;Authentication=Active Directory Default;"
        - name: APPLICATIONINSIGHTS_CONNECTION_STRING
          value: "InstrumentationKey=53a1b502-8dfd-4183-b1a3-28602e0a8c73;IngestionEndpoint=https://polandcentral-0.in.applicationinsights.azure.com/;LiveEndpoint=https://polandcentral.livediagnostics.monitor.azure.com/;ApplicationId=a3619664-f7d8-4206-8cb4-21f445efed3c"
        - name: KeyVaultName
          value: "kv-todo-app"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: todo-app
  annotations:
    azure.workload.identity/client-id: "2c57becb-1733-464a-879f-350d67f9652a"
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: todo-api-scaler
spec:
  scaleTargetRef:
    name: todo-app
  minReplicaCount: 1  # API zawsze musi mieć minimum jedną instancję
  maxReplicaCount: 10
  pollingInterval: 15
  cooldownPeriod: 60
  triggers:
  - type: cpu
    metadata:
      type: Utilization
      value: "60"  # Skaluj gdy średnie użycie CPU przekracza 60%